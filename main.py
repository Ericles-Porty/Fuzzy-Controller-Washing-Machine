# -*- coding: utf-8 -*-
"""IA - Exercício - 10 - CONTROLADOR FUZZY - MÁQUINA DE LAVAR.pdf

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LNuOHbSsnNX9_d7Q2MjzrCwO4z6cEfLB

# **Exemplo de aplicação de lógica nebulosa (*Fuzzy*)**

> Objetivo do Sistema: *um analista de projetos de uma empresa quer determinar o **risco** de um determinado projeto (saída), dependendo da quantidade de **dinheiro** e de **pessoas** envolvidas no projeto (entradas).*

* **Entrada**

> *Quantidade de Dinheiro*:
   >> Universo (intervalo de valores nítidos/crisp): 0 a 100 

   >> Conjuntos *fuzzy* (valores difusos): **inadequado**, **médio** e **adequado**.

> *Quantidade de Pessoas*:
   >> Universo (intervalo de valores nítidos/crisp): 0 a 100 

   >> Conjuntos *fuzzy* (valores difusos): **baixo** e **alto**.

*   **Saída**

> *Risco*
   >> Universo (intervalo de valores nítidos/crisp): 0 a 100 

   >> Conjuntos *fuzzy* (valores difusos): **pequeno**, **normal** e **alto**.


## Base de conhecimento (regras de decisão)

> **SE** dinheiro é *adequado* **OU** pessoal é *pequeno* **ENTÃO** risco é *pequeno*

> **SE** dinheiro é *médio* **E** pessoal é *alto*, **ENTÃO** risco é *normal*

> **SE** dinheiro é *inadequado*, **ENTÃO** risco é *alto*

---
## Referências
{1} SCIKIT-FUZZY. Scikit-Fuzzy Overview. Disponível em: https://pythonhosted.org/scikit-fuzzy/overview.html.

{2} PISTORI, H. Exemplo de aplicação de lógica nebulosa (fuzzy). Disponível em: https://colab.research.google.com/drive/13nqdB-kHLIMUxemuQJfnV1bqrLzM3hPS.

### **Instalação do Pacote** *skfuzzy*
"""

# Instale o pacote skfuzzy
!pip install scikit-fuzzy

"""### Criação das **Variáveis** e de seus respectivos **Termos Lingúisticos**"""

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Variáveis Linguísticas
sujeira = ctrl.Antecedent(np.arange(0,101,1), 'SUJEIRA')
mancha = ctrl.Antecedent(np.arange(0,101,1), 'MANCHA')
tempo = ctrl.Consequent(np.arange(0,101,1), 'TEMPO')

# Conjuntos de Termos Linguísticos (membership function tipo trapezoidal)
sujeira['POUCA'] = fuzz.trimf(sujeira.universe, [0,0,50])
sujeira['MEDIA'] = fuzz.trimf(sujeira.universe, [0,50,100])
sujeira['GRANDE'] = fuzz.trimf(sujeira.universe, [50,100,100])

mancha['NENHUMA'] = fuzz.trimf(mancha.universe, [0,0,50])
mancha['MEDIA'] = fuzz.trimf(mancha.universe, [0,50,100])
mancha['GRANDE'] = fuzz.trimf(mancha.universe, [50,100,100])

tempo['MUITO_CURTO'] = fuzz.trimf(tempo.universe, [0,0,10])
tempo['CURTO'] = fuzz.trimf(tempo.universe, [0,10,25])
tempo['MEDIO'] = fuzz.trimf(tempo.universe, [10,25,40])
tempo['LONGO'] = fuzz.trimf(tempo.universe, [25,40,60])
tempo['MUITO_LONGO'] = fuzz.trapmf(tempo.universe, [40,60,100,100])

"""### Mostrando graficamente as partições dos Universos **DINHEIRO**, **PESSOAL**  e **RISCO**"""

sujeira.view()
mancha.view()
tempo.view()

"""### Criando a **Base de Regras**"""

rule1 = ctrl.Rule(sujeira['POUCA'] & mancha['NENHUMA'], tempo['MUITO_CURTO'])
rule2 = ctrl.Rule(sujeira['POUCA'] & mancha['MEDIA'], tempo['MEDIO'])
rule3 = ctrl.Rule(sujeira['POUCA'] & mancha['GRANDE'], tempo['LONGO'])

rule4 = ctrl.Rule(sujeira['MEDIA'] & mancha['NENHUMA'], tempo['CURTO'])
rule5 = ctrl.Rule(sujeira['MEDIA'] & mancha['MEDIA'], tempo['MEDIO'])
rule6 = ctrl.Rule(sujeira['MEDIA'] & mancha['GRANDE'], tempo['LONGO'])

rule7 = ctrl.Rule(sujeira['GRANDE'] & mancha['NENHUMA'], tempo['MEDIO'])
rule8 = ctrl.Rule(sujeira['GRANDE'] & mancha['MEDIA'], tempo['LONGO'])
rule9 = ctrl.Rule(sujeira['GRANDE'] & mancha['GRANDE'], tempo['MUITO_LONGO'])

"""### Criando o **Controlador Nebuloso**, definindo os **Entradas** e calculando o **Resultado**"""

tempo_ctrl = ctrl.ControlSystem([rule1, rule2, rule3, rule4, rule5, rule6, rule7, rule8,rule9])
tempo_simulado = ctrl.ControlSystemSimulation(tempo_ctrl)

# Entrando com alguns valores para qualidade da dinheiro e do pessoal
tempo_simulado.input['SUJEIRA'] = 75
tempo_simulado.input['MANCHA'] = 25

#Computando o resultado
tempo_simulado.compute()

"""### Apresentando **Graficamente** o **Resultado**"""

sujeira.view(sim=tempo_simulado)
mancha.view(sim=tempo_simulado)
tempo.view(sim=tempo_simulado)
print("Tempo utilizado será ", tempo_simulado.output['TEMPO'])